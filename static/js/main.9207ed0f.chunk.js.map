{"version":3,"sources":["assets/demo/avatars/avatar.jpeg","assets/demo/avatars/rachel_avatar.jpg","components/panels/Panel.js","components/Avatar/Avatar.js","assets/demo/users.js","components/panels/FlyPanel.js","components/panels/RoostPanel.js","components/Post/Post.js","assets/demo/posts.js","components/panels/FeedPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PanelBody","_ref2","children","style","react_default","a","createElement","className","Children","map","child","cloneElement","props","length","Panel","_ref","fontAwesomeName","title","gridColumn","span","concat","AvatarBody","user","src","avatar","alt","name","Avatar","clickable","href","Avatar_AvatarBody","RACHEL","rachelAvatar","CURRENT_USER","currentUserAvatar","friends","FlyPanel","components_panels_Panel","Panel_PanelBody","components_Avatar_Avatar","rows","RoostPanel","friend","index","key","Post","post","text","user_avatar","created_at","display","flexDirection","margin","borderRadius","textAlign","backgroundColor","color","overflowX","whiteSpace","POSTS","FeedPanel","overflow","components_Post_Post","App","components_panels_FlyPanel","panels_FeedPanel","panels_RoostPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9207ed0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.99ed5701.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/rachel_avatar.a7f3a753.jpg\";","import React, { Children, cloneElement } from 'react';\nimport './Panel.css'\n\nconst Panel = ({ fontAwesomeName, title, gridColumn, children, span }) => (\n  <div className='panel' style={{ 'gridColumn': `${gridColumn} / span ${span || 1}` }}>\n      {children}\n  </div>\n);\n\nexport const PanelBody = ({ children, style }) => (\n  <div className='panel-body' style={style}>\n    {Children.map(children, child => (\n        cloneElement(child, {\n          className: child.props.className && child.props.className.length > 0 ?\n          child.props.className + ' panel-child' :\n          'panel-child'\n        }))\n      )}\n  </div>\n);\n\nexport default Panel;\n\n","import React from 'react';\nimport './Avatar.css';\n\nconst AvatarBody = ({ user, className }) => (\n  <div className={`avatar${className ? ` ${className}` : ''}`}>\n    <div className='avatar-container'>\n      <img className='avatar' src={user.avatar} alt='avatar' />\n    </div>\n    <div className='avatar-name'>\n      <h3>{user.name}</h3>\n    </div>\n  </div>\n);\n\nconst Avatar = ({ user, className, clickable }) => (\n  clickable ? (\n    <a href='#' className={`avatar${className ? ` ${className}` : ''}`}>\n      <AvatarBody user={user} />\n    </a>\n  ) : (\n    <AvatarBody className={className} user={user} />\n  )\n);\n\nexport default Avatar\n","import currentUserAvatar from '../../assets/demo/avatars/avatar.jpeg';\nimport rachelAvatar from '../../assets/demo/avatars/rachel_avatar.jpg';\n\nconst RAS = {\n  name: 'ras',\n  avatar: 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Logo_RAS_2016.png/400px-Logo_RAS_2016.png'\n}\n\nconst RACHEL = {\n  name: 'rachel',\n  avatar: rachelAvatar\n}\n\nconst LAURA = {\n  name: 'laura',\n  avatar: 'https://vignette.wikia.nocookie.net/starwars/images/7/77/ReyVFcover-TROS.png/revision/latest?cb=20190525225316'\n}\n\nconst SHUR = {\n  name: 'shur',\n  avatar: 'https://shurfineinspires.com/wp-content/uploads/2016/04/shurfine_logo.png'\n}\n\nexport const CURRENT_USER = {\n  avatar: currentUserAvatar,\n  name: 'carlos',\n  friends: [RAS, RACHEL, LAURA, SHUR]\n};\n","import React from 'react';\nimport Panel, { PanelBody } from './Panel.js';\nimport Avatar from '../Avatar/Avatar.js';\nimport './FlyPanel.css';\nimport { CURRENT_USER } from '../../assets/demo/users.js';\n\nconst FlyPanel = () => (\n  <Panel fontAwesomeName='fas fa-feather-alt' title='fly' gridColumn='2'>\n    <PanelBody>\n      <Avatar user={CURRENT_USER} />\n      <textarea className='flypanel' rows=\"10\" />\n      <button className='flypanel'>submit</button>\n    </PanelBody>\n  </Panel>\n);\n\nexport default FlyPanel;\n","import React from 'react';\nimport Panel, { PanelBody } from './Panel.js';\nimport Avatar from '../Avatar/Avatar.js';\nimport { CURRENT_USER } from '../../assets/demo/users.js'\n\nconst RoostPanel = () => (\n  <Panel fontAwesomeName='fas fa-broadcast-tower' title='roost' gridColumn='8'>\n    <PanelBody>\n      {CURRENT_USER.friends.map((friend, index) => (\n        <Avatar user={friend} key={index} clickable />\n      ))}\n    </PanelBody>\n  </Panel>\n);\n\nexport default RoostPanel;\n","import React from 'react';\nimport Avatar from '../Avatar/Avatar.js';\n\nconst Post = ({ post, className }) => {\n  const {\n    text,\n    user:name,\n    user_avatar:avatar,\n    created_at:createdAt\n  } = post;\n\n  return (\n    <div\n      className={className}\n      style={{ display: 'flex', flexDirection: 'column' }}\n    >\n      <Avatar user={{ name, avatar }} className={className} />\n      <pre\n        className={className}\n        style={{\n          margin: '20px auto auto auto',\n          borderRadius: '5px',\n          textAlign: 'left',\n          backgroundColor: 'white',\n          color: 'black',\n          overflowX: 'hidden',\n          whiteSpace: 'pre-wrap'\n        }}\n      >\n        {text}\n      </pre>\n    </div>\n  );\n}\n\nexport default Post;\n","import currentUserAvatar from '../../assets/demo/avatars/avatar.jpeg';\nimport rachelAvatar from '../../assets/demo/avatars/rachel_avatar.jpg';\n\nconst POSTS = [\n  {\n    text: `”Oranges & The Ocean” by Ada Limon\n\n    Valencia in the nineties, nowhere\n    were the oranges, except one slight\n    site from the train’s blur. I burnt\n    my nipples right off the bat. No way\n    you could be as pretty as the girls\n    in Valencia, topless and tanned\n    all over. Pale blue hostel sheets\n    were barely bearable. All night\n    I thought I’d die when the moon\n    came in and I’d wake to the pinching\n    skin. But I didn’t die. I went right\n    back the next day, but in a t-shirt\n    and didn’t try to be pretty, just\n    swam like something ordinary,\n    something worthy of the sea.`,\n    user: 'rachel',\n    user_avatar: rachelAvatar,\n    created_at: '07-13-2019'\n  }, {\n    text: 'https://www.newyorker.com/humor/daily-shouts/focus-group-testing-takeaways-for-the-next-social-media-platform',\n    user: 'carlos',\n    user_avatar: currentUserAvatar,\n    created_at: '07-12-2019'\n  }, {\n    text: `”On Being Alone” by Elizabeth Bishop\n    Perhaps there are ghosts at school, or wicked wolves in hiding on the ridge, or evil spirits that dwell in the depths of the furnace room and grope their sinister way up through the pipes and into our rooms. But we have never seen them. We have lived for two seasons untouched by the slightest hint of the supernatural; there are no haunted houses in the immediate vicinity, and no neglected grave yards—scarcely even a blighted tree, in this spring term, or a barren field to hold before us a symbol of terror and death. Why is it then, when there is nothing to fear, and we have surely outgrown the bogies of our younger days, that so many of us seem to dread being alone? We say to each other, “I hate Sundays; there are so many quiet hours,” or “It must be wonderful to have a roommate, someone to talk to in study hour.” All this is rather strange. Why does being alone, when we have a hundred companions most of the time, present such a great trial, or why should we wish to keep the conversation going so endlessly? The fear of a “quiet hour” alone is greater than the fear of all those innumerable quiet hours alone that are ahead of all of us. There is a peculiar quality about being alone, an atmosphere that no sounds or persons can ever give. It is as if being with people were the Earth of the mind, the land with its hills and valleys, scent and music: but in being alone, the mind finds its Sea, the wide, quiet plane with different lights in the sky and different, more secret sounds. But it appears that we are frightened by the first breaking of its waves at our feet, and now we will never go on voyages of discovery, never feel the free winds that have blown over water, and never find the islands of the Imagination, where live who knows what curious beasts and strange peoples? Being alone can be fun; alone the mind can do what it wants to without even the velvet leash of sleep. But we can never understand this while we stand on the shore with our backs to the water and cry after our companions. Perhaps we shall never know the companion in ourselves who is with us all our lives, the nearness of our minds at all times to the rare person whose heart quickens when a bird climbs high and alone in the clear air.`,\n    user: 'shur',\n    user_avatar: 'https://shurfineinspires.com/wp-content/uploads/2016/04/shurfine_logo.png',\n    created_at: '07-11-2019'\n  }\n]\n\nexport default POSTS;\n","import React from 'react';\nimport Panel, { PanelBody } from './Panel.js'\nimport Post from '../Post/Post.js'\nimport POSTS from '../../assets/demo/posts.js'\n\nconst FeedPanel = () => {\n  return (\n  <Panel\n    fontAwesomeName='fas fa-align-left'\n    title='feed'\n    gridColumn='4'\n    span='3'\n  >\n    <PanelBody style={{ overflow: 'scroll' }}>\n      {POSTS.map((post, index) => <Post post={post} key={index} />)}\n    </PanelBody>\n  </Panel>\n);\n}\n\nexport default FeedPanel;\n","import React from 'react';\nimport FlyPanel from './components/panels/FlyPanel.js';\nimport RoostPanel from './components/panels/RoostPanel.js';\nimport FeedPanel from './components/panels/FeedPanel.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>birdhouse</h1>\n      </header>\n      <div className='container'>\n        <FlyPanel />\n        <FeedPanel />\n        <RoostPanel />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}